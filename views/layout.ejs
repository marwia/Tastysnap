<!DOCTYPE html>
<html>
  <head>
    <title>TastySnap</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->
    <!-- Custom CSS -->
    <link rel="stylesheet" href="/libs/bootstrap/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="/libs/font-awesome/css/font-awesome.min.css">
    <link rel="stylesheet" href="/libs/angular-xeditable/dist/css/xeditable.css">
    <link rel="stylesheet" href="/libs/angular-spinkit/build/angular-spinkit.min.css">

    <!-- Attenzione: le righe comprese tra STYLES vengono sovrascritte, non modificare
    manualmente -->

    <!--STYLES-->
    <link rel="stylesheet" href="/min/production.min.css">
    <!--STYLES END-->


    <base href="/" /> 

  </head>

  <body>
    <%- body %>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    <script type="text/javascript" src="/jst.js"></script>
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!-- Custom JS -->
    <script src="libs/lodash/dist/lodash.min.js"></script>
    <script src="libs/angular/angular.js"></script>
    <script src="libs/angular-ui-router/release/angular-ui-router.js"></script>
    <script src="libs/angular-bootstrap/ui-bootstrap-tpls.min.js"></script>
    <script src="libs/angular-cookies/angular-cookies.min.js"></script>
    <script src="libs/angular-animate/angular-animate.min.js"></script>
    <script src="libs/jquery/dist/jquery.min.js"></script>
    <script src="libs/angular-xeditable/dist/js/xeditable.min.js"></script>
    <script src="libs/angular-file-upload/dist/angular-file-upload.min.js"></script>
    <script src="libs/color-thief/dist/color-thief.min.js"></script>
    <script src="libs/angular-spinkit/build/angular-spinkit.min.js"></script>
    <script src="libs/stackblur-canvas/dist/stackblur.js"></script>
    <script src="libs/moment/moment.js"></script>
    <script src="libs/moment/locale/it.js"></script>
    <script src="libs/angular-messages/angular-messages.min.js"></script>
    <script src="libs/angular-simple-logger/dist/angular-simple-logger.min.js"></script>
    <script src="libs/angular-google-maps/dist/angular-google-maps.min.js"></script>
    <!-- Attenzione: le righe comprese tra SCRIPTS vengono sovrascritte, non modificare
    manualmente -->

    <!--SCRIPTS-->
    <script src="/min/production.min.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
