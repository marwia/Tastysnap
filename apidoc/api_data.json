[  {    "type": "put",    "url": "/collection/:collection/recipe",    "title": "Add a recipe to a Collection",    "name": "AddRecipeCollection",    "group": "Collection",    "description": "<p>Serve per aggiungere una ricetta ad un propria collezione. Bisogna essere autori della collezione.<br> Le richieste devono essere con codifica <strong> application/x-www-form-urlencoded</strong> oppure <strong>application/json.</strong></p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": false,            "field": "recipe_id",            "description": "<p>The id of the recipe to add.</p> "          }        ]      }    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Authentication token.</p> "          }        ]      },      "examples": [        {          "title": "Request-Header-Example:",          "content": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImNhdmFsbG8iLCJjcmVhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJ1cGRhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJpZCI6IjU1YjI3NWFhM2U0OTM1YmMwMjhkMDJjMCIsImlhdCI6MTQzOTA1ODQ2MSwiZXhwIjoxNDM5MDY5MjYxfQ.EBvGiq4fuRwKXjgrX5kKmUJZVQOgkjCBRe-j--g8NbU",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "recipe",            "description": "<p>JSON that represents the collection object.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "    HTTP/1.1 200 OK\n\t\t{\n\t\t  \"recipes\": [],\n\t\t  \"author\": {\n\t\t    \"username\": \"cavallo\",\n\t\t    \"createdAt\": \"2015-09-15T13:59:50.559Z\",\n\t\t    \"updatedAt\": \"2015-09-15T13:59:50.559Z\",\n\t\t    \"id\": \"55f8245674cb8184028877b9\"\n\t\t  },\n\t\t  \"title\": \"Cazzate\",\n\t\t  \"description\": \"Bla bla bla...\",\n\t\t  \"createdAt\": \"2015-09-15T20:33:00.133Z\",\n\t\t  \"updatedAt\": \"2015-09-15T20:33:00.133Z\",\n\t\t  \"id\": \"55f8807c10dc1b5d0abda19a\"\n\t\t}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/CollectionController.js",    "groupTitle": "Collection",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WrongTokenFormat",            "description": "<p>Format is 'Authorization: Bearer [token]'</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthHeader",            "description": "<p>No Authorization header was found</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidToken",            "description": "<p>Invalid Token!</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoPermission",            "description": "<p>You are not the author of this resource, you can not update it.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"WrongTokenFormat\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoAuthHeader\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"InvalidToken\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoPermission\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/collection",    "title": "Create a new Collection",    "name": "CreateCollection",    "group": "Collection",    "description": "<p>Serve per creare una collezione di ricette. Visto che ogni collezione deve avere un autore, si deve effettuare qualsiasi chiamata con il token del suo autore.<br> Le richieste devono essere con codifica <strong> application/x-www-form-urlencoded</strong> oppure <strong>application/json.</strong></p> ",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Authentication token.</p> "          }        ]      },      "examples": [        {          "title": "Request-Header-Example:",          "content": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImNhdmFsbG8iLCJjcmVhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJ1cGRhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJpZCI6IjU1YjI3NWFhM2U0OTM1YmMwMjhkMDJjMCIsImlhdCI6MTQzOTA1ODQ2MSwiZXhwIjoxNDM5MDY5MjYxfQ.EBvGiq4fuRwKXjgrX5kKmUJZVQOgkjCBRe-j--g8NbU",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "title",            "description": "<p>Collection title.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "description",            "description": "<p>Collection description.</p> "          },          {            "group": "Parameter",            "type": "<p>json</p> ",            "optional": false,            "field": "recipe",            "description": "<p>JSON string that represents the Recipe.</p> "          }        ]      },      "examples": [        {          "title": "Request-Body-Example:",          "content": "title=Spaghetti+fantastici&description=Questa+ricetta...",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "collection",            "description": "<p>JSON that represents the collection object.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "    HTTP/1.1 200 OK\n    {\n    \"collection\": \n      {\n\t\t   \"title\" : \"Menu primaverile\",\n        \"description\" : \"Lista di piatti perfetti per un risveglio tutto naturale.\",\n        \"createdAt\": \"2015-08-11T18:58:46.329Z\",\n        \"updatedAt\": \"2015-08-11T18:58:46.329Z\",\n        \"id\": \"55ca45e69b4246110b319cb1\"\n      }\n    }",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/CollectionController.js",    "groupTitle": "Collection",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WrongTokenFormat",            "description": "<p>Format is 'Authorization: Bearer [token]'</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthHeader",            "description": "<p>No Authorization header was found</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidToken",            "description": "<p>Invalid Token!</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"WrongTokenFormat\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoAuthHeader\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"InvalidToken\"\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/collection",    "title": "Delete a Collection",    "name": "DeleteCollection",    "group": "Collection",    "description": "<p>Serve per eliminare una propria collezione. Si deve inviare qualsiasi richiesta con il token del suo autore.<br> Le richieste devono essere con codifica <strong> application/x-www-form-urlencoded</strong> oppure <strong>application/json.</strong></p> ",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Authentication token.</p> "          }        ]      },      "examples": [        {          "title": "Request-Header-Example:",          "content": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImNhdmFsbG8iLCJjcmVhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJ1cGRhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJpZCI6IjU1YjI3NWFhM2U0OTM1YmMwMjhkMDJjMCIsImlhdCI6MTQzOTA1ODQ2MSwiZXhwIjoxNDM5MDY5MjYxfQ.EBvGiq4fuRwKXjgrX5kKmUJZVQOgkjCBRe-j--g8NbU",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "recipe",            "description": "<p>JSON that represents the collection object.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "    HTTP/1.1 200 OK\n\t\t{\n\t\t  \"recipes\": [],\n\t\t  \"author\": {\n\t\t    \"username\": \"cavallo\",\n\t\t    \"createdAt\": \"2015-09-15T13:59:50.559Z\",\n\t\t    \"updatedAt\": \"2015-09-15T13:59:50.559Z\",\n\t\t    \"id\": \"55f8245674cb8184028877b9\"\n\t\t  },\n\t\t  \"title\": \"Cazzate\",\n\t\t  \"description\": \"Bla bla bla...\",\n\t\t  \"createdAt\": \"2015-09-15T20:33:00.133Z\",\n\t\t  \"updatedAt\": \"2015-09-15T20:33:00.133Z\",\n\t\t  \"id\": \"55f8807c10dc1b5d0abda19a\"\n\t\t}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/CollectionController.js",    "groupTitle": "Collection",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WrongTokenFormat",            "description": "<p>Format is 'Authorization: Bearer [token]'</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthHeader",            "description": "<p>No Authorization header was found</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidToken",            "description": "<p>Invalid Token!</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoPermission",            "description": "<p>You are not the author of this resource, you can not update it.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"WrongTokenFormat\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoAuthHeader\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"InvalidToken\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoPermission\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/recipe/:recipe/comment",    "title": "Comment a Recipe",    "name": "CommentRecipe",    "group": "Comment_Recipe",    "description": "<p>Serve per dare un commento testuale ad una ricetta. Visto che ogni commento deve avere un autore, si deve inviare qualsiasi richiesta con il token del suo autore.<br> Nei parametri della richiesta va inserito il corpo del commento.</p> ",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Authentication token.</p> "          }        ]      },      "examples": [        {          "title": "Request-Header-Example:",          "content": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImNhdmFsbG8iLCJjcmVhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJ1cGRhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJpZCI6IjU1YjI3NWFhM2U0OTM1YmMwMjhkMDJjMCIsImlhdCI6MTQzOTA1ODQ2MSwiZXhwIjoxNDM5MDY5MjYxfQ.EBvGiq4fuRwKXjgrX5kKmUJZVQOgkjCBRe-j--g8NbU",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "body",            "description": "<p>The comment's body.</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "comment",            "description": "<p>JSON that represents the comment object.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "HTTP/1.1 200 OK\n{\n {\n   \"body\": \"Ottima ricetta\",\n   \"user\": \"55b275aa3e4935bc028d02c0\",\n   \"recipe\": \"55cc9b54e75edbb10e65089c\",\n   \"createdAt\": \"2015-09-09T09:53:20.041Z\",\n   \"updatedAt\": \"2015-09-09T09:53:20.041Z\",\n   \"id\": \"55f00190b6aecd11065cab85\"\n }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/CommentController.js",    "groupTitle": "Comment_Recipe",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WrongTokenFormat",            "description": "<p>Format is 'Authorization: Bearer [token]'</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthHeader",            "description": "<p>No Authorization header was found</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidToken",            "description": "<p>Invalid Token!</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoRecipe",            "description": "<p>The recipe was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"WrongTokenFormat\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoAuthHeader\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"InvalidToken\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"No recipe found\"\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/recipe/:recipe/comment/:comment",    "title": "Delete a comment",    "name": "DeleteComment",    "group": "Comment_Recipe",    "description": "<p>Serve per dare eliminare un commento. Necessità di autorizzazione e di essere l'autore del commento.<br> Nei parametri della richiesta va inserito il corpo del commento.</p> ",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Authentication token.</p> "          }        ]      },      "examples": [        {          "title": "Request-Header-Example:",          "content": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImNhdmFsbG8iLCJjcmVhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJ1cGRhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJpZCI6IjU1YjI3NWFhM2U0OTM1YmMwMjhkMDJjMCIsImlhdCI6MTQzOTA1ODQ2MSwiZXhwIjoxNDM5MDY5MjYxfQ.EBvGiq4fuRwKXjgrX5kKmUJZVQOgkjCBRe-j--g8NbU",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "comment",            "description": "<p>JSON that represents the comment object.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "HTTP/1.1 200 OK\n    {\n      \"user\": {\n        \"username\": \"cavallo\",\n        \"createdAt\": \"2015-09-15T13:59:50.559Z\",\n        \"updatedAt\": \"2015-09-15T13:59:50.559Z\",\n        \"id\": \"55f8245674cb8184028877b9\"\n      },\n      \"recipe\": {\n        \"title\": \"Carbonara senza uova\",\n        \"description\": \"Procedere cosi...\",\n        \"author\": \"55f8245674cb8184028877b9\",\n        \"createdAt\": \"2015-09-15T14:01:17.587Z\",\n        \"updatedAt\": \"2015-09-15T14:01:17.587Z\",\n        \"id\": \"55f824ad74cb8184028877ba\"\n      },\n      \"body\": \"<p>Could he somehow make the shape of an \\\"S\\\" with his arms? I feel like i see potential for some hidden shapes in here...</p>\\n\\n<p>Looks fun!\\n</p>\",\n      \"createdAt\": \"2015-09-15T19:25:50.688Z\",\n      \"updatedAt\": \"2015-09-15T19:25:50.688Z\",\n      \"id\": \"55f870be79df96670817ad7a\"\n    }",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/CommentController.js",    "groupTitle": "Comment_Recipe",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WrongTokenFormat",            "description": "<p>Format is 'Authorization: Bearer [token]'</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthHeader",            "description": "<p>No Authorization header was found</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidToken",            "description": "<p>Invalid Token!</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoPermission",            "description": "<p>You are not the author of this resource, you can not update it.</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoRecipe",            "description": "<p>The recipe was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"WrongTokenFormat\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoAuthHeader\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"InvalidToken\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoPermission\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"No recipe found\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/recipe/:recipe/comment/:comment",    "title": "Get a comment for a Recipe",    "name": "GetCommentRecipe",    "group": "Comment_Recipe",    "description": "<p>Serve a richiedere un particolare commento di una ricetta. <br> Non sono richiesti ne parametri ne le credenziali dell'utente.</p> ",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "recipe",            "description": "<p>JSON that represents the comment.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "HTTP/1.1 200 OK\n  {\n    \"user\": {\n      \"username\": \"cavallo\",\n      \"createdAt\": \"2015-09-15T13:59:50.559Z\",\n      \"updatedAt\": \"2015-09-15T13:59:50.559Z\",\n      \"id\": \"55f8245674cb8184028877b9\"\n    },\n    \"recipe\": \"55f824ad74cb8184028877ba\",\n    \"body\": \"Bono!!\",\n    \"createdAt\": \"2015-09-15T14:32:01.067Z\",\n    \"updatedAt\": \"2015-09-15T14:35:18.559Z\",\n    \"id\": \"55f82be1c62852850347a9a2\"\n  }",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/CommentController.js",    "groupTitle": "Comment_Recipe",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "NoRecipe",            "description": "<p>The recipe was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"No recipe found\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/recipe/:recipe/comment",    "title": "List comments for a Recipe",    "name": "GetCommentsRecipe",    "group": "Comment_Recipe",    "description": "<p>Serve a richiedere la lista dei commenti di una ricetta. <br> Non sono richiesti ne parametri ne le credenziali dell'utente.</p> ",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "recipe",            "description": "<p>JSON that represents the list.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "   HTTP/1.1 200 OK\n[\n       {\n         \"user\": {\n           \"username\": \"cavallo\",\n           \"createdAt\": \"2015-09-15T13:59:50.559Z\",\n           \"updatedAt\": \"2015-09-15T13:59:50.559Z\",\n           \"id\": \"55f8245674cb8184028877b9\"\n         },\n         \"recipe\": \"55f824ad74cb8184028877ba\",\n         \"body\": \"Bono!!\",\n         \"createdAt\": \"2015-09-15T14:32:01.067Z\",\n         \"updatedAt\": \"2015-09-15T14:35:18.559Z\",\n         \"id\": \"55f82be1c62852850347a9a2\"\n       },\n       {\n         \"user\": {\n           \"username\": \"cavallo\",\n           \"createdAt\": \"2015-09-15T13:59:50.559Z\",\n           \"updatedAt\": \"2015-09-15T13:59:50.559Z\",\n           \"id\": \"55f8245674cb8184028877b9\"\n         },\n         \"recipe\": \"55f824ad74cb8184028877ba\",\n         \"body\": \"Ciao!\",\n         \"createdAt\": \"2015-09-15T14:39:14.569Z\",\n         \"updatedAt\": \"2015-09-15T14:39:14.569Z\",\n         \"id\": \"55f82d926314879e03dcfcd5\"\n       },\n       {\n         \"user\": {\n           \"username\": \"cavallo\",\n           \"createdAt\": \"2015-09-15T13:59:50.559Z\",\n           \"updatedAt\": \"2015-09-15T13:59:50.559Z\",\n           \"id\": \"55f8245674cb8184028877b9\"\n         },\n         \"recipe\": \"55f824ad74cb8184028877ba\",\n         \"body\": \"<p>Could he somehow make the shape of an \\\"S\\\" with his arms? I feel like i see potential for some hidden shapes in here...</p>\\n\\n<p>Looks fun!\\n</p>\",\n         \"createdAt\": \"2015-09-15T19:25:50.688Z\",\n         \"updatedAt\": \"2015-09-15T19:25:50.688Z\",\n         \"id\": \"55f870be79df96670817ad7a\"\n       }\n     ]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/CommentController.js",    "groupTitle": "Comment_Recipe",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "NoRecipe",            "description": "<p>The recipe was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"No recipe found\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/recipe/:recipe/comment/:comment",    "title": "Modify a comment",    "name": "ModifyComment",    "group": "Comment_Recipe",    "description": "<p>Serve per dare modificare il corpo di un commento. Necessità di autorizzazione e di essere l'autore del commento.<br> Nei parametri della richiesta va inserito il corpo del commento.</p> ",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Authentication token.</p> "          }        ]      },      "examples": [        {          "title": "Request-Header-Example:",          "content": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImNhdmFsbG8iLCJjcmVhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJ1cGRhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJpZCI6IjU1YjI3NWFhM2U0OTM1YmMwMjhkMDJjMCIsImlhdCI6MTQzOTA1ODQ2MSwiZXhwIjoxNDM5MDY5MjYxfQ.EBvGiq4fuRwKXjgrX5kKmUJZVQOgkjCBRe-j--g8NbU",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "body",            "description": "<p>The comment's body.</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "comment",            "description": "<p>JSON that represents the comment object.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "HTTP/1.1 200 OK\n{\n {\n   \"body\": \"Ottima ricetta, complimenti!\",\n   \"user\": \"55b275aa3e4935bc028d02c0\",\n   \"recipe\": \"55cc9b54e75edbb10e65089c\",\n   \"createdAt\": \"2015-09-09T09:53:20.041Z\",\n   \"updatedAt\": \"2015-09-09T09:59:20.041Z\",\n   \"id\": \"55f00190b6aecd11065cab85\"\n }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/CommentController.js",    "groupTitle": "Comment_Recipe",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WrongTokenFormat",            "description": "<p>Format is 'Authorization: Bearer [token]'</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthHeader",            "description": "<p>No Authorization header was found</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidToken",            "description": "<p>Invalid Token!</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoPermission",            "description": "<p>You are not the author of this resource, you can not update it.</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoRecipe",            "description": "<p>The recipe was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"WrongTokenFormat\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoAuthHeader\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"InvalidToken\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoPermission\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"No recipe found\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/recipe",    "title": "Create a new Recipe",    "name": "CreateRecipe",    "group": "Recipe",    "description": "<p>Serve per caricare un ricetta creata da un utente. Visto che ogni ricetta deve avere un autore, si deve inviare qualsiasi ricetta con il token del suo autore.<br> Le richieste devono essere con codifica <strong> application/x-www-form-urlencoded</strong> oppure <strong>application/json.</strong></p> ",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Authentication token.</p> "          }        ]      },      "examples": [        {          "title": "Request-Header-Example:",          "content": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImNhdmFsbG8iLCJjcmVhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJ1cGRhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJpZCI6IjU1YjI3NWFhM2U0OTM1YmMwMjhkMDJjMCIsImlhdCI6MTQzOTA1ODQ2MSwiZXhwIjoxNDM5MDY5MjYxfQ.EBvGiq4fuRwKXjgrX5kKmUJZVQOgkjCBRe-j--g8NbU",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "title",            "description": "<p>Recipe title.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "description",            "description": "<p>Recipe description.</p> "          },          {            "group": "Parameter",            "type": "<p>json</p> ",            "optional": false,            "field": "recipe",            "description": "<p>JSON string that represents the Recipe.</p> "          }        ]      },      "examples": [        {          "title": "Request-Body-Example:",          "content": "title=Spaghetti+fantastici&description=Questa+ricetta...",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "recipe",            "description": "<p>JSON that represents the recipe object.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "HTTP/1.1 200 OK\n{\n\"recipe\": \n  {\n    \"createdAt\": \"2015-08-11T18:58:46.329Z\",\n    \"updatedAt\": \"2015-08-11T18:58:46.329Z\",\n    \"id\": \"55ca45e69b4246110b319cb1\"\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/RecipeController.js",    "groupTitle": "Recipe",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WrongTokenFormat",            "description": "<p>Format is 'Authorization: Bearer [token]'</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthHeader",            "description": "<p>No Authorization header was found</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidToken",            "description": "<p>Invalid Token!</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"WrongTokenFormat\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoAuthHeader\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"InvalidToken\"\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/recipe",    "title": "Delete a Recipe",    "name": "DeleteRecipe",    "group": "Recipe",    "description": "<p>Serve per eliminare un ricetta creata da un utente. Si deve inviare qualsiasi richiesta con il token del suo autore.<br> Le richieste devono essere con codifica <strong> application/x-www-form-urlencoded</strong> oppure <strong>application/json.</strong></p> ",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Authentication token.</p> "          }        ]      },      "examples": [        {          "title": "Request-Header-Example:",          "content": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImNhdmFsbG8iLCJjcmVhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJ1cGRhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJpZCI6IjU1YjI3NWFhM2U0OTM1YmMwMjhkMDJjMCIsImlhdCI6MTQzOTA1ODQ2MSwiZXhwIjoxNDM5MDY5MjYxfQ.EBvGiq4fuRwKXjgrX5kKmUJZVQOgkjCBRe-j--g8NbU",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "recipe",            "description": "<p>JSON that represents the recipe object.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "HTTP/1.1 200 OK\n{\n\"recipe\": \n  {\n    \"title\": \"Spagoasd\"\n    \"description\": \"...\"\n    \"createdAt\": \"2015-08-11T18:58:46.329Z\",\n    \"updatedAt\": \"2015-08-11T18:58:46.329Z\",\n    \"id\": \"55ca45e69b4246110b319cb1\"\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/RecipeController.js",    "groupTitle": "Recipe",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WrongTokenFormat",            "description": "<p>Format is 'Authorization: Bearer [token]'</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthHeader",            "description": "<p>No Authorization header was found</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidToken",            "description": "<p>Invalid Token!</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoPermission",            "description": "<p>You are not the author of this resource, you can not update it.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"WrongTokenFormat\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoAuthHeader\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"InvalidToken\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoPermission\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/recipe/:id",    "title": "Get a Recipe",    "name": "GetRecipe",    "group": "Recipe",    "description": "<p>Serve per caricare tutti i dettagli di una ricetta.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "id",            "description": "<p>Recipe id.</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "recipe",            "description": "<p>JSON that represents the recipe object.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "HTTP/1.1 200 OK\n{\n\"recipe\": \n  {\n    \"createdAt\": \"2015-08-11T18:58:46.329Z\",\n    \"updatedAt\": \"2015-08-11T18:58:46.329Z\",\n    \"id\": \"55ca45e69b4246110b319cb1\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/RecipeController.js",    "groupTitle": "Recipe"  },  {    "type": "get",    "url": "/recipe",    "title": "List Recipes",    "name": "ListRecipes",    "group": "Recipe",    "description": "<p>Serve per richiedere un lista di ricette. Attenzione che i risultati sono limitati ad un numero preciso di ricette, massimo 30 per richiesta.<br> Questo end point accetta prametri.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": false,            "field": "skip",            "description": "<p>The number of records to skip (useful for pagination).</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": false,            "field": "limit",            "description": "<p>The maximum number of records to send back (useful for pagination). Defaults to 30.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "where",            "description": "<p>Instead of filtering based on a specific attribute, you may instead choose to provide a where parameter with a Waterline WHERE criteria object, encoded as a JSON string.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "sort",            "description": "<p>The sort order. By default, returned records are sorted by primary key value in ascending order.</p> "          }        ]      },      "examples": [        {          "title": "Request-Param-Example:",          "content": "?skip=6&limit=3",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response-Example:",          "content": "    HTTP/1.1 200 OK\n    [\n{\n \"votes\": [],\n \"comments\": [],\n \"collections\": [],\n \"author\": {\n   \"username\": \"cavallo\",\n   \"createdAt\": \"2015-07-24T17:28:10.577Z\",\n   \"updatedAt\": \"2015-07-24T17:28:10.577Z\",\n   \"id\": \"55b275aa3e4935bc028d02c0\"\n },\n \"Title\": \"Carbonara new\",\n \"Description\": \"dedsds sd sdsd\",\n \"upvotes\": 0,\n \"createdAt\": \"2015-08-13T13:31:25.262Z\",\n \"updatedAt\": \"2015-08-13T13:31:25.262Z\",\n  \"id\": \"55cc9c2de75edbb10e6508a1\"\n},\n{\n \"votes\": [],\n  \"comments\": [],\n \"collections\": [],\n \"author\": {\n   \"username\": \"cavallo\",\n  \"createdAt\": \"2015-07-24T17:28:10.577Z\",\n   \"updatedAt\": \"2015-07-24T17:28:10.577Z\",\n   \"id\": \"55b275aa3e4935bc028d02c0\"\n },\n \"Title\": \"Carbonara\",\n \"Description\": \"dedsds sd sdsd\",\n \"upvotes\": 0,\n \"createdAt\": \"2015-08-13T14:05:26.104Z\",\n \"updatedAt\": \"2015-08-13T14:05:26.104Z\",\n \"id\": \"55cca42654ceca27112f4733\"\n},\n{\n \"votes\": [],\n \"comments\": [],\n \"collections\": [],\n \"author\": {\n   \"username\": \"cavallo\",\n   \"createdAt\": \"2015-07-24T17:28:10.577Z\",\n   \"updatedAt\": \"2015-07-24T17:28:10.577Z\",\n   \"id\": \"55b275aa3e4935bc028d02c0\"\n },\n \"Title\": \"Carbonara 2\",\n \"Description\": \"dedsds sd sdsd\",\n \"upvotes\": 0,\n \"createdAt\": \"2015-08-13T14:06:59.150Z\",\n \"updatedAt\": \"2015-08-13T14:06:59.150Z\",\n \"id\": \"55cca48354ceca27112f4734\"\n}\n]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/RecipeController.js",    "groupTitle": "Recipe",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WrongTokenFormat",            "description": "<p>Format is 'Authorization: Bearer [token]'</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthHeader",            "description": "<p>No Authorization header was found</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidToken",            "description": "<p>Invalid Token!</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"WrongTokenFormat\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoAuthHeader\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"InvalidToken\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/recipe/:id",    "title": "Update a Recipe",    "name": "UpdateRecipe",    "group": "Recipe",    "description": "<p>Serve per applicare delle modifiche ad un ricetta. Visto che ogni ricetta deve avere un autore, soltanto l'autore può eseguire l'update.<br> Le richieste devono essere con codifica <strong> application/x-www-form-urlencoded</strong> oppure <strong>application/json.</strong></p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "id",            "description": "<p>Recipe id.</p> "          },          {            "group": "Parameter",            "type": "<p>Object</p> ",            "optional": false,            "field": "parameters",            "description": "<p>Pass in body parameters with the same name as the attributes defined on your model to set those values on the desired record.</p> "          }        ]      },      "examples": [        {          "title": "Request-Body-Example:",          "content": "title=Spaghetti+fantastici&description=Questa+ricetta...",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "recipe",            "description": "<p>JSON that represents the recipe object.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "HTTP/1.1 200 OK\n{\n\"recipe\": \n  {\n    \"createdAt\": \"2015-08-11T18:58:46.329Z\",\n    \"updatedAt\": \"2015-08-11T18:58:46.329Z\",\n    \"id\": \"55ca45e69b4246110b319cb1\"\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/RecipeController.js",    "groupTitle": "Recipe",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Authentication token.</p> "          }        ]      },      "examples": [        {          "title": "Request-Header-Example:",          "content": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImNhdmFsbG8iLCJjcmVhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJ1cGRhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJpZCI6IjU1YjI3NWFhM2U0OTM1YmMwMjhkMDJjMCIsImlhdCI6MTQzOTA1ODQ2MSwiZXhwIjoxNDM5MDY5MjYxfQ.EBvGiq4fuRwKXjgrX5kKmUJZVQOgkjCBRe-j--g8NbU",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WrongTokenFormat",            "description": "<p>Format is 'Authorization: Bearer [token]'</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthHeader",            "description": "<p>No Authorization header was found</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidToken",            "description": "<p>Invalid Token!</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoPermission",            "description": "<p>You are not the author of this resource, you can not update it.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"WrongTokenFormat\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoAuthHeader\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"InvalidToken\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoPermission\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/user",    "title": "Register a new User",    "name": "CreateUser",    "group": "User",    "description": "<p>Serve eseguire la registrazione di un nuovo utente.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>Username of the User.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "password",            "description": "<p>Password of the User.</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "user",            "description": "<p>User object.</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "token",            "description": "<p>Token for identification.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\"user\": \n  {\n    \"username\": \"abc\",\n    \"createdAt\": \"2015-08-11T18:58:46.329Z\",\n    \"updatedAt\": \"2015-08-11T18:58:46.329Z\",\n    \"id\": \"55ca45e69b4246110b319cb1\"\n  },\n  \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjU1Y2E0NWU2OWI0MjQ2MTEwYjMxOWNiMSIsImlhdCI6MTQzOTMxOTUyNiwiZXhwIjoxNDM5MzMwMzI2fQ.GUOOFlWwiNPeZjmN3-HPHG4cMJsWnP7rgQbux6FNqGI\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>Breve descrizione dell'errore che ha riscontrato il server.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"message\": \"Please fill out all fields\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/UserController.js",    "groupTitle": "User"  },  {    "type": "post",    "url": "/login",    "title": "User login",    "group": "User",    "name": "UserLogin",    "description": "<p>Per eseguire il login di un utente puoi inviare le sue credenziali al server, così otterrai il token che ti servirà per tutte le successive operazioni. Il username e la password sono parametri da inserire nel body della richiesta.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>Username of the User.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "password",            "description": "<p>Password of the User.</p> "          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "username=cavallo&password=cavallo",          "type": "url-encoded"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "token",            "description": "<p>Token for identification.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>Breve descrizione dell'errore che ha riscontrato il server.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"message\": \"User and password required.\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"message\": \"User not found.\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/AuthController.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/recipe/:recipe/vote",    "title": "Check if you voted a Recipe",    "name": "CheckVoteRecipe",    "group": "Vote_Recipe",    "description": "<p>Serve a controllare se l'utente ha votato una ricetta. <br> Necessita di autenticazione.</p> ",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Authentication token.</p> "          }        ]      },      "examples": [        {          "title": "Request-Header-Example:",          "content": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImNhdmFsbG8iLCJjcmVhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJ1cGRhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJpZCI6IjU1YjI3NWFhM2U0OTM1YmMwMjhkMDJjMCIsImlhdCI6MTQzOTA1ODQ2MSwiZXhwIjoxNDM5MDY5MjYxfQ.EBvGiq4fuRwKXjgrX5kKmUJZVQOgkjCBRe-j--g8NbU",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "recipe",            "description": "<p>JSON that represents the upvote object.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "   HTTP/1.1 200 OK\n{\n  value: 1\n  author: \"55b275aa3e4935bc028d02c0\"\n  recipe: \"55cc9b54e75edbb10e65089c\"\n  createdAt: \"2015-09-09T19:53:12.315Z\"\n  updatedAt: \"2015-09-09T19:53:12.315Z\"\n  id: \"55f08e28a489ce62116cfacf\"\n}",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"WrongTokenFormat\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoAuthHeader\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"InvalidToken\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"No recipe found\"\n}",          "type": "json"        }      ],      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WrongTokenFormat",            "description": "<p>Format is 'Authorization: Bearer [token]'</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthHeader",            "description": "<p>No Authorization header was found</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidToken",            "description": "<p>Invalid Token!</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoRecipe",            "description": "<p>The recipe was not found.</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "api/controllers/VoteRecipeController.js",    "groupTitle": "Vote_Recipe"  },  {    "type": "delete",    "url": "/recipe/:recipe/vote",    "title": "Delete a generic vote from Recipe",    "name": "DeleteVoteRecipe",    "group": "Vote_Recipe",    "description": "<p>Serve eliminare un voto generico (positivo o negativo) ad una ricetta. Visto che ogni voto deve avere un autore, si deve inviare qualsiasi richiesta con il token del suo autore.<br> Non sono richiesti parametri.</p> ",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Authentication token.</p> "          }        ]      },      "examples": [        {          "title": "Request-Header-Example:",          "content": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImNhdmFsbG8iLCJjcmVhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJ1cGRhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJpZCI6IjU1YjI3NWFhM2U0OTM1YmMwMjhkMDJjMCIsImlhdCI6MTQzOTA1ODQ2MSwiZXhwIjoxNDM5MDY5MjYxfQ.EBvGiq4fuRwKXjgrX5kKmUJZVQOgkjCBRe-j--g8NbU",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "recipe",            "description": "<p>JSON that represents the upvote object.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/VoteRecipeController.js",    "groupTitle": "Vote_Recipe",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WrongTokenFormat",            "description": "<p>Format is 'Authorization: Bearer [token]'</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthHeader",            "description": "<p>No Authorization header was found</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidToken",            "description": "<p>Invalid Token!</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoPermission",            "description": "<p>You are not the author of this resource, you can not update it.</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoRecipe",            "description": "<p>The recipe was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"WrongTokenFormat\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoAuthHeader\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"InvalidToken\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoPermission\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"No recipe found\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/recipe/:recipe/downvote",    "title": "Downvote a Recipe",    "name": "DownvoteRecipe",    "group": "Vote_Recipe",    "description": "<p>Serve per dare un voto negativo (-1) ad una ricetta. Visto che ogni voto deve avere un autore, si deve inviare qualsiasi richiesta con il token del suo autore.<br> Non sono richiesti parametri.</p> ",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Authentication token.</p> "          }        ]      },      "examples": [        {          "title": "Request-Header-Example:",          "content": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImNhdmFsbG8iLCJjcmVhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJ1cGRhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJpZCI6IjU1YjI3NWFhM2U0OTM1YmMwMjhkMDJjMCIsImlhdCI6MTQzOTA1ODQ2MSwiZXhwIjoxNDM5MDY5MjYxfQ.EBvGiq4fuRwKXjgrX5kKmUJZVQOgkjCBRe-j--g8NbU",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "recipe",            "description": "<p>JSON that represents the upvote object.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "HTTP/1.1 200 OK\n{\n {\n   \"value\": -1,\n   \"author\": \"55b275aa3e4935bc028d02c0\",\n   \"recipe\": \"55cc9b54e75edbb10e65089c\",\n   \"createdAt\": \"2015-09-09T09:53:20.041Z\",\n   \"updatedAt\": \"2015-09-09T09:53:20.041Z\",\n   \"id\": \"55f00190b6aecd11065cab85\"\n }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/VoteRecipeController.js",    "groupTitle": "Vote_Recipe",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WrongTokenFormat",            "description": "<p>Format is 'Authorization: Bearer [token]'</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthHeader",            "description": "<p>No Authorization header was found</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidToken",            "description": "<p>Invalid Token!</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"WrongTokenFormat\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoAuthHeader\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"InvalidToken\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/recipe/:recipe/downvote",    "title": "List the downvotes for a Recipe",    "name": "GetDownvotesRecipe",    "group": "Vote_Recipe",    "description": "<p>Serve a richiedere la lista di voti negativi di una ricetta. <br> Non sono richiesti ne parametri ne le credenziali dell'utente.</p> ",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "recipe",            "description": "<p>JSON that represents the upvote object.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "   HTTP/1.1 200 OK\n[\n  {\n    \"author\": {\n      \"username\": \"cavallo\",\n      \"createdAt\": \"2015-07-24T17:28:10.577Z\",\n      \"updatedAt\": \"2015-07-24T17:28:10.577Z\",\n      \"id\": \"55b275aa3e4935bc028d02c0\"\n  },\n    \"recipe\": \"55cc9b54e75edbb10e65089c\",\n    \"value\": -1,\n    \"createdAt\": \"2015-09-09T09:53:20.041Z\",\n    \"updatedAt\": \"2015-09-09T09:53:20.041Z\",\n    \"id\": \"55f00190b6aecd11065cab85\"\n  }\n]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/VoteRecipeController.js",    "groupTitle": "Vote_Recipe",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "NoRecipe",            "description": "<p>The recipe was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"No recipe found\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/recipe/:recipe/upvote",    "title": "List the upvotes for a Recipe",    "name": "GetUpvotesRecipe",    "group": "Vote_Recipe",    "description": "<p>Serve a richiedere la lista di voti positivi di una ricetta. <br> Non sono richiesti ne parametri ne le credenziali dell'utente.</p> ",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "recipe",            "description": "<p>JSON that represents the upvote object.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "   HTTP/1.1 200 OK\n[\n  {\n    \"author\": {\n      \"username\": \"cavallo\",\n      \"createdAt\": \"2015-07-24T17:28:10.577Z\",\n      \"updatedAt\": \"2015-07-24T17:28:10.577Z\",\n      \"id\": \"55b275aa3e4935bc028d02c0\"\n  },\n    \"recipe\": \"55cc9b54e75edbb10e65089c\",\n    \"value\": 1,\n    \"createdAt\": \"2015-09-09T09:53:20.041Z\",\n    \"updatedAt\": \"2015-09-09T09:53:20.041Z\",\n    \"id\": \"55f00190b6aecd11065cab85\"\n  }\n]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/VoteRecipeController.js",    "groupTitle": "Vote_Recipe",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "NoRecipe",            "description": "<p>The recipe was not found.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"No recipe found\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/recipe/:recipe/upvote",    "title": "Upvote a Recipe",    "name": "UpvoteRecipe",    "group": "Vote_Recipe",    "description": "<p>Serve per dare un voto positivo (+1) ad una ricetta. Visto che ogni voto deve avere un autore, si deve inviare qualsiasi richiesta con il token del suo autore.<br> Non sono richiesti parametri.</p> ",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Authentication token.</p> "          }        ]      },      "examples": [        {          "title": "Request-Header-Example:",          "content": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImNhdmFsbG8iLCJjcmVhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJ1cGRhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJpZCI6IjU1YjI3NWFhM2U0OTM1YmMwMjhkMDJjMCIsImlhdCI6MTQzOTA1ODQ2MSwiZXhwIjoxNDM5MDY5MjYxfQ.EBvGiq4fuRwKXjgrX5kKmUJZVQOgkjCBRe-j--g8NbU",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "recipe",            "description": "<p>JSON that represents the upvote object.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "HTTP/1.1 200 OK\n{\n {\n   \"value\": 1,\n   \"author\": \"55b275aa3e4935bc028d02c0\",\n   \"recipe\": \"55cc9b54e75edbb10e65089c\",\n   \"createdAt\": \"2015-09-09T09:53:20.041Z\",\n   \"updatedAt\": \"2015-09-09T09:53:20.041Z\",\n   \"id\": \"55f00190b6aecd11065cab85\"\n }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/VoteRecipeController.js",    "groupTitle": "Vote_Recipe",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WrongTokenFormat",            "description": "<p>Format is 'Authorization: Bearer [token]'</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthHeader",            "description": "<p>No Authorization header was found</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidToken",            "description": "<p>Invalid Token!</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"WrongTokenFormat\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoAuthHeader\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"InvalidToken\"\n}",          "type": "json"        }      ]    }  }]