define({ "api": [  {    "type": "post",    "url": "/recipe",    "title": "Create a new Recipe",    "name": "CreateRecipe",    "group": "Recipe",    "description": "<p>Serve per caricare un ricetta creata da un utente. Visto che ogni ricetta deve avere un autore, si deve inviare qualsiasi ricetta con il token del suo autore.<br> Le richieste devono essere con codifica <strong> application/x-www-form-urlencoded</strong> oppure <strong>application/json.</strong></p> ",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Authentication token.</p> "          }        ]      },      "examples": [        {          "title": "Request-Header-Example:",          "content": "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImNhdmFsbG8iLCJjcmVhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJ1cGRhdGVkQXQiOiIyMDE1LTA3LTI0VDE3OjI4OjEwLjU3N1oiLCJpZCI6IjU1YjI3NWFhM2U0OTM1YmMwMjhkMDJjMCIsImlhdCI6MTQzOTA1ODQ2MSwiZXhwIjoxNDM5MDY5MjYxfQ.EBvGiq4fuRwKXjgrX5kKmUJZVQOgkjCBRe-j--g8NbU",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "title",            "description": "<p>Recipe title.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "description",            "description": "<p>Recipe description.</p> "          },          {            "group": "Parameter",            "type": "<p>json</p> ",            "optional": false,            "field": "recipe",            "description": "<p>JSON string that represents the Recipe.</p> "          }        ]      },      "examples": [        {          "title": "Request-Body-Example:",          "content": "title=Spaghetti+fantastici&description=Questa+ricetta...",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>json</p> ",            "optional": false,            "field": "recipe",            "description": "<p>JSON that represents the recipe object.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response-Example:",          "content": "HTTP/1.1 200 OK\n{\n\"recipe\": \n  {\n    \"createdAt\": \"2015-08-11T18:58:46.329Z\",\n    \"updatedAt\": \"2015-08-11T18:58:46.329Z\",\n    \"id\": \"55ca45e69b4246110b319cb1\"\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/RecipeController.js",    "groupTitle": "Recipe",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "WrongTokenFormat",            "description": "<p>Format is 'Authorization: Bearer [token]'</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "NoAuthHeader",            "description": "<p>No Authorization header was found</p> "          },          {            "group": "Error 4xx",            "optional": false,            "field": "InvalidToken",            "description": "<p>Invalid Token!</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"WrongTokenFormat\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"NoAuthHeader\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Bad Request\n{\n  \"error\": \"InvalidToken\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/user",    "title": "Register a new User",    "name": "CreateUser",    "group": "User",    "description": "<p>Serve eseguire la registrazione di un nuovo utente.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>Username of the User.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "password",            "description": "<p>Password of the User.</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "user",            "description": "<p>User object.</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "token",            "description": "<p>Token for identification.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n\"user\": \n  {\n    \"username\": \"abc\",\n    \"createdAt\": \"2015-08-11T18:58:46.329Z\",\n    \"updatedAt\": \"2015-08-11T18:58:46.329Z\",\n    \"id\": \"55ca45e69b4246110b319cb1\"\n  },\n  \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjU1Y2E0NWU2OWI0MjQ2MTEwYjMxOWNiMSIsImlhdCI6MTQzOTMxOTUyNiwiZXhwIjoxNDM5MzMwMzI2fQ.GUOOFlWwiNPeZjmN3-HPHG4cMJsWnP7rgQbux6FNqGI\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>Breve descrizione dell'errore che ha riscontrato il server.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"message\": \"Please fill out all fields\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/UserController.js",    "groupTitle": "User"  },  {    "type": "post",    "url": "/login",    "title": "User login",    "group": "User",    "name": "UserLogin",    "description": "<p>Per eseguire il login di un utente puoi inviare le sue credenziali al server, così otterrai il token che ti servirà per tutte le successive operazioni. Il username e la password sono parametri da inserire nel body della richiesta.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>Username of the User.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "password",            "description": "<p>Password of the User.</p> "          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "username=cavallo&password=cavallo",          "type": "url-encoded"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "token",            "description": "<p>Token for identification.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "message",            "description": "<p>Breve descrizione dell'errore che ha riscontrato il server.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"message\": \"User and password required.\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"message\": \"User not found.\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "api/controllers/AuthController.js",    "groupTitle": "User"  }] });